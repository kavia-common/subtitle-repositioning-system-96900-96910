{"is_source_file": true, "format": "Python", "description": "This source file provides subtitle repositioning logic for a backend API, including format parsing and repositioning heuristics for SRT, ASS/SSA, and VTT subtitles, along with a heuristic to detect burnt-in text regions from video filenames.", "external_files": [], "external_methods": ["os.path.splitext", "os.path.basename", "re.split", "re.match", "re.compile", "os.path.join", "tempfile.mkstemp", "open"], "published": ["decide_subtitle_placement", "process_subtitle"], "classes": [{"name": "Timecode", "description": "Represents a timestamp in hours, minutes, seconds, milliseconds and provides conversion methods."}, {"name": "SRTItem", "description": "Data structure representing an individual SRT subtitle entry with timing and text."}], "methods": [{"name": "List[SRTItem] parse_srt(content: str)", "description": "Parses SRT subtitle content into a list of SRTItem objects.", "scope": "", "scopeKind": ""}, {"name": "str format_srt(items: List[SRTItem])", "description": "Converts a list of SRTItem objects back into SRT formatted text.", "scope": "", "scopeKind": ""}, {"name": "str move_ass_line_to_top(text: str)", "description": "Adds or prepends override tags to position ASS/SSA dialogue lines at the top.", "scope": "", "scopeKind": ""}, {"name": "str move_ass_line_to_bottom(text: str)", "description": "Adds or prepends override tags to position ASS/SSA dialogue lines at the bottom.", "scope": "", "scopeKind": ""}, {"name": "str reposition_ass_ssa(content: str, place_top: bool)", "description": "Repositions dialogues in ASS/SSA files to top or bottom by modifying override tags.", "scope": "", "scopeKind": ""}, {"name": "List[str] reposition_vtt_lines(lines: List[str], place_top: bool)", "description": "Repositions WebVTT cues to top or bottom by modifying cue settings.", "scope": "", "scopeKind": ""}, {"name": "str reposition_vtt(content: str, place_top: bool)", "description": "Wraps reposition_vtt_lines to process entire VTT content while preserving header.", "scope": "", "scopeKind": ""}, {"name": "List[Tuple[str,float]] detect_burnin_regions(video_path: str)", "description": "Placeholder heuristic returning probable burnt-in text regions based on video filename.", "scope": "", "scopeKind": ""}, {"name": "bool decide_subtitle_placement(video_path: str)", "description": "Heuristically decides whether subtitles should be placed at top or bottom based on burnt-in region likelihood.", "scope": "", "scopeKind": ""}, {"name": "str process_subtitle(video_path: str, subtitle_path: str)", "description": "Main function to process and reposition subtitles based on video and file path, supporting multiple formats.", "scope": "", "scopeKind": ""}, {"name": "str __str__(self)", "scope": "Timecode", "scopeKind": "class", "description": "unavailable"}, {"name": "Timecode _parse_timecode_fragment(fragment: str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "\"Timecode\" from_ms(ms: int)", "scope": "Timecode", "scopeKind": "class", "description": "unavailable"}, {"name": "int to_ms(self)", "scope": "Timecode", "scopeKind": "class", "description": "unavailable"}], "calls": ["parse_srt", "format_srt", "reposition_ass_ssa", "reposition_vtt", "detect_burnin_regions", "decide_subtitle_placement"], "search-terms": ["subtitle repositioning", "heuristics", "ASS override tags", "VTT line positioning", "burn-in detection", "subtitle format parsing", ".srt", ".ass", ".vtt"], "state": 2, "file_id": 5, "knowledge_revision": 11, "git_revision": "", "ctags": [{"_type": "tag", "name": "ASS_EVENT_RE", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^ASS_EVENT_RE = re.compile(r\"^(Dialogue|Comment):\\\\s*(?P<rest>.*)$\", re.IGNORECASE)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ASS_FIELDS_SPLIT", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^ASS_FIELDS_SPLIT = re.compile(r\"(?<!\\\\\\\\),\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SRTItem", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^class SRTItem:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SRT_TIME_RE", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^SRT_TIME_RE = re.compile($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Timecode", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^class Timecode:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__str__", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^    def __str__(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "Timecode", "scopeKind": "class"}, {"_type": "tag", "name": "_parse_timecode_fragment", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def _parse_timecode_fragment(fragment: str) -> Timecode:$/", "language": "Python", "typeref": "typename:Timecode", "kind": "function", "signature": "(fragment: str)"}, {"_type": "tag", "name": "decide_subtitle_placement", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def decide_subtitle_placement(video_path: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(video_path: str)"}, {"_type": "tag", "name": "detect_burnin_regions", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def detect_burnin_regions(video_path: str) -> List[Tuple[str, float]]:$/", "language": "Python", "typeref": "typename:List[Tuple[str,float]]", "kind": "function", "signature": "(video_path: str)"}, {"_type": "tag", "name": "format_srt", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def format_srt(items: List[SRTItem]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(items: List[SRTItem])"}, {"_type": "tag", "name": "from_ms", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^    def from_ms(ms: int) -> \"Timecode\":$/", "language": "Python", "typeref": "typename:\"Timecode\"", "kind": "member", "signature": "(ms: int)", "scope": "Timecode", "scopeKind": "class"}, {"_type": "tag", "name": "move_ass_line_to_bottom", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def move_ass_line_to_bottom(text: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(text: str)"}, {"_type": "tag", "name": "move_ass_line_to_top", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def move_ass_line_to_top(text: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(text: str)"}, {"_type": "tag", "name": "parse_srt", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def parse_srt(content: str) -> List[SRTItem]:$/", "language": "Python", "typeref": "typename:List[SRTItem]", "kind": "function", "signature": "(content: str)"}, {"_type": "tag", "name": "process_subtitle", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def process_subtitle(video_path: str, subtitle_path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(video_path: str, subtitle_path: str)"}, {"_type": "tag", "name": "reposition_ass_ssa", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def reposition_ass_ssa(content: str, place_top: bool) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(content: str, place_top: bool)"}, {"_type": "tag", "name": "reposition_vtt", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def reposition_vtt(content: str, place_top: bool) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(content: str, place_top: bool)"}, {"_type": "tag", "name": "reposition_vtt_lines", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^def reposition_vtt_lines(lines: List[str], place_top: bool) -> List[str]:$/", "language": "Python", "typeref": "typename:List[str]", "kind": "function", "signature": "(lines: List[str], place_top: bool)"}, {"_type": "tag", "name": "to_ms", "path": "/home/kavia/workspace/code-generation/subtitle-repositioning-system-96900-96910/subtitle_backend/src/api/reposition_core.py", "pattern": "/^    def to_ms(self) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "member", "signature": "(self)", "scope": "Timecode", "scopeKind": "class"}], "hash": "e46922efa9aee6f2541f63f5a1b5ec3e", "format-version": 4, "code-base-name": "subtitle_backend", "filename": "subtitle_backend/src/api/reposition_core.py", "fields": [{"name": "ASS_EVENT_RE = re.compile(r\"^(Dialogue|Comment):\\\\s*(?P<rest>.*)$\", re.IGNORECASE)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ASS_FIELDS_SPLIT = re.compile(r\"(?<!\\\\\\\\),\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SRT_TIME_RE = re.compile(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"11": ""}]}